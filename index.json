[{"categories":[],"content":"刚开始学习java的时候，可能是一头雾水，不知道从何学起，这里跟大家分享一下!","date":"2023-04-12","objectID":"/2023/javalean3/","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"一、初始java ","date":"2023-04-12","objectID":"/2023/javalean3/:1:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"1 生活中的程序： 从起床到教室上课的过程 穿衣打扮》起床》洗漱》出宿舍》》吃早餐》到教室 按照特定的顺序去完成某一件事的过程我们叫做生活中的程序 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:1","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"2 计算机中的程序: 一组有序指令的集合,需要和计算机交流就要使用计算机语言，java就是计算机语言的一种 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:2","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"3 java能做什么： 1开发桌面应用程序，比如：QQ、酷狗 2、开发internet应用程序，比如：淘宝、天猫 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:3","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"4 java技术平台： Java SE：标准版，java的技术与核心，开发桌面应用程序 Java EE：提供企业级项目的解决方案，开发网页应用 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:4","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"5 安装jdk： jdk：java的一个核心工具包 jre：java的一个运行环境（表示java除了可以在windows系统运行，还可以在苹果系统运行） 环境变量：告诉计算机可以执行.java的运行程序在哪里 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:5","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"6 开发java程序的步骤： 编写一个java源程序 新建记事本，将后缀名改为.java 编译java源程序，语法：javac 源文件名.java 编译后会生成一个.class的字节码文件 运行java程序，运行的是.class的文件，语法：java 源文件名 注意：java严格区分大小写 System.out.println () 打印之后换一行，先打印再换行 System.out.print () 打印之后不换行 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:6","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"7.转义字符： 使用\\n进行换行 使用\\t空格一个制表符的位置，也就是一个tab的位置，8个英文字母的长度 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:7","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"8.java中的注释： //注释内容 单 行注释:表示对下一条语句进行一个解释 /* 注释内容 */ 多行注释：表示对下面一段语句进行一个解释 /**注释内容 */ 文档注释：表示对一段文本注释 注释的语句是不会进行编译的 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:8","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"9.java的编码规范： 遇到大括号 { 就进行一次缩进，缩进距离一个tab键的长度 每一个大括号 } 单独占一行，表示一段语句的结束 ; 表示每行语句的结束，每一行只写一句代码 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:9","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"10.使用开发工具开发java程序的步骤： 新建一个java工程 选中新建的工程，选中src文件夹，点击右键new，新建一个class，新建时选中 public static void main这一项，会自动生成java源程序的框架 去编写java源程序 编译java源程序，开发工具会自动编译 运行java程序 ","date":"2023-04-12","objectID":"/2023/javalean3/:1:10","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"二、变量、数据类型和运算符 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"1.每个程序都只有一个入口， 也就是只有一个main方法，只有一个程序可以打开QQ，其他的地方都打 开不了 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:1","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"2.程序没有运行是存储磁盘上，运行在内存中 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:2","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"3.酒店中入住： a.开房间（根据不同人数开不同类型的房间） b.入住 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:3","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"4.变量的概念： 内存根据数据不同类型开辟的这个空间叫做变量 酒店 相当于 内存 房间 相当于 变量 入住的人 相当于 数据（变量值） 房间类型 相当于 数据类型（数字还是文字） 房间号 相当于 变量名 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:4","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"5.变量名： 用于快速找到内存中变量空间位置取得名字 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:5","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"6.数据类型： 数值型： 1.整型（int）：用于存储整数，整数的类型123 999 666 byte字节型，short短整型，long长整型 long》int》short》byte 2.非整型：用于存储小数，小数的类型1234.5 3.14 双精度浮点型（double）：小数的长度比较长 单精度浮点型（float）：小数的长度短一些 非数值型： 1、字符型（char）：用于存储单个字符，都需要使用英文状态的单引号括起来 比如：‘男’、‘女’、‘开’、‘关’ 2、字符串型（String）：用于存储一串字符，存储0~n个字符，都需要用英文状态下的双引号括起来 比如：“我的名字是张三”，“我的爱好是打游戏” ","date":"2023-04-12","objectID":"/2023/javalean3/:2:6","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"7.变量名的命名规则： 只能够使用_和$这两个符号; 只能使用英文字母、_ 、$三个开头，后面的可以使用数字、字母和_ 、美元符号 ; 使用java语言中的关键字 采用见文识意的方式命名，采用驼峰命名法ageOfStudent,多个字母命名时， 第一个字母的首字母小写，后面字母首字母大写 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:7","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"8.变量的使用： 声明变量，就是在内存开一个空间 语法：数据类型 变量名;（空格和分号不能少），比如：int qian; 变量赋值，就是将数据放到开辟的这个空间 语法：变量名 = 变量值;比如：qian = 1000; 使用变量 比如：System.out.println(qian); ","date":"2023-04-12","objectID":"/2023/javalean3/:2:8","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"9.运算符的使用： 赋值运算符（=），将等号右边的值赋给左边 拼接运算符（+），将+左右两边的连起来 表达式：就是符号（如加号、减号）与操作数（如b，3等）的组合，比如：b-1 算术运算符： 四则运算：+、-、*、/ %（取模运算）：除以一个数得到余数，就是求余数的运算的运算 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:9","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"10.从键盘扫描输入的值： 1、找到有扫描仪的商店，语法：import java.util.Scanner;写在public class的前面 2、购买一台新的扫描仪，给它取一个名字 语法：Scanner input = new Scanner(System.in); 3、使用扫描仪的扫描功能 如果扫描整数：使用input.nextInt(); 如果扫描小数：使用input.nextDouble(); 如果扫描字符串：使用input.next(); ","date":"2023-04-12","objectID":"/2023/javalean3/:2:10","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"11.类型转换： 自动类型转换： 1、必须两种类型互相兼容，比如：都是数值类型int和double，double和float 2、转换成的类型一定要比被转换的类型要大，比如：int转换成double float转换成double ","date":"2023-04-12","objectID":"/2023/javalean3/:2:11","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"12.强制类型转换： 语法：数据类型 变量名 = (数据类型)变量名; 比如：double b = 3.14 int a = (int)b; 1、同类型的强制类型转换，比如：int a = (int)10.9; 2、不同类型的强制类型转换，只有char和int可以，通过ASCII码表去转换 比如：int b = (int)‘a’; ","date":"2023-04-12","objectID":"/2023/javalean3/:2:12","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"13.运算符： 1、赋值运算符=将右边的值赋给左边 2、算术运算符+、-、、/、%，数学运算一样，先/ %后+- 3、关系运算符（比较运算符）：\u003e、\u003c、\u003e=、\u003c=、==、!= 4、逻辑运算符 boolean类型（布尔类型）：用于比较运算，只有两个值（true和false）默认false ","date":"2023-04-12","objectID":"/2023/javalean3/:2:13","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"14.运算符的优先级： 1、最高优先级，英文状态下的小括号() 2、最低优先级，赋值运算符= 3、算术运算符\u003e关系运算符\u003e逻辑运算符\u003e赋值运算符 ","date":"2023-04-12","objectID":"/2023/javalean3/:2:14","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"三、选择结构 ","date":"2023-04-12","objectID":"/2023/javalean3/:3:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"1.if选择结构 if基本选择结构 语法：if(要满足的条件){ 如果条件为true的时候，进入大括号中 满足条件之后得到的结果，不满足条件不会去执行 } 如果条件为false的时候，绕过大括号执行外面的 条件只能是boolean类型的数据 ","date":"2023-04-12","objectID":"/2023/javalean3/:3:1","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"2.逻辑运算符： \u0026\u0026(shift+7):and符号，并且的意思，同时满足连接前后条件才为true，有一个不满足为 false ||(shirt+):或者的意思，只要前后两个条件一个为true，整个表达式就为true，同时为 false才为false !(shirt+1):非的意思，就是取反，如果表达式为true，使用非就为false ","date":"2023-04-12","objectID":"/2023/javalean3/:3:2","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"3.if-else选择结构： 适用于基本选择条件的情况 语法：if(要满足的条件){ 满足条件得到的结果 }else{ 不满足条件的得到的结果 } ","date":"2023-04-12","objectID":"/2023/javalean3/:3:3","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"4.产生一个随机数： 1、找到一个有随机数产生器的商店，语法：import java.util.Random; 2、购买一台随机数产生器并取一个名字，语法：Random ran = new Random(); 3、使用这台随机数产生器的功能区产生随机数，语法：ran.nextInt(数字); ran.nextInt(10) 表示产生一个0~9之间的随机数 ran.nextInt(10) +1表示产生一个1~10之间的随机数 ","date":"2023-04-12","objectID":"/2023/javalean3/:3:4","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"5.多重if选择结构： 适用于很多条件分支的情况 语法： if (条件1){ //满足条件1得到的结果 }else if (条件2){ //默认不满足条件1满足条件2得到的结果 }else if (条件n){ //默认不满足条件2满足条件n得到的结果 }else{ //默认不满足条件n不满足所有条件得到的结果 } 只要找到一个满足的条件，执行完之后，结束选择结构 ","date":"2023-04-12","objectID":"/2023/javalean3/:3:5","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"6.嵌套if选择结构 适用于在一个判断的基础再做一次判断的情况 语法： if (条件1){满足条件1得到的结果 if (条件2){满足条件2得到的结果 } }else{不满足条件1得到的结果 } ==只能够比较数值类型，比较字符串是否相等，使用.equals(“要等于哪个字符串”); 比如：sex.equals(“男”)；10 == 10 ","date":"2023-04-12","objectID":"/2023/javalean3/:3:6","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"四、循环结构 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"1.循环结构： 打印50份试卷，是从第1份开始打印，打印到第50份结束，重复打印试卷的过程 绕操场跑10圈，从第1圈开始，到第10圈结束，重复跑步的过程 做100道编程题，从第1题开始，到第100道结束，重复做题的过程 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:1","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"2.循环的概念： 重复完成某一件事情或者某一个操作，有一个开始位置和结束位置就叫做 循环 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:2","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"3.循环的特点： 1、循环条件：也就是满足某个条件下才做重复的操作 2、循环操作：也就是重复所做的事情或者操作 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:3","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"4.while循环的语法： while(循环条件){ 满足条件的时候所做的循环操作 } 特点：先判断，再执行 使用while循环的步骤： 1、确定是否存在重复操作 2、分析出循环条件和循环操作分别是什么 3、套用while循环语法写出循环结构 4、检查循环是否能正确退出 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:4","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"5.do-while循环结构的语法： do{循环操作}while(循环条件); 特点：先执行循环操作，再进行循环条件判断（先执行，再判断） ","date":"2023-04-12","objectID":"/2023/javalean3/:4:5","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"6.while循环和do-while循环的差别： 1、循环的次序不同，while循环是先判断，再执行，do-while是先执行，再判断； 2、while循环在初始值不满足循环条件的时候一次都不会执行，do-while循环在初始值不 满足循环条件的时候至少执行一次 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:6","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"7.程序调试： 断点调试的步骤：（每次调试后取消掉断点） 1、设置断点：在左侧边栏的位置点击鼠标左键两次，可以生成一个断点 2、进入调试模式：点击右键，选择debug as进入debug调试模式，程序会在设置断点的地方停下来 3、单步执行，也就是一行一行的执行代码，按F6单步跳过执行代码 4、观察变量值的变化 5、找出错误的位置 6、改正错误 7、运行看结果是否正确 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:7","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"8.for循环结构 语法： for(表达式1;表达式2;表达式3){ 循环操作 } 表达式1：循环从哪里开始，也就是循环的初始值，比如：int num = 1 表达式2：循环的条件，也就是循环到哪里结束，比如：num \u003c100 表达式3：计数器，也就是每循环一次，初始值产生怎样的变化，比如：num++ 每个表达式之间用分号隔开，每个表达式都可以不写，但是分号不能省略 for循环的执行顺序： ①先去执行表达式1，也就是先去找初始值 ②第二步去执行表达式2，也就是去找循环条件 ③第三步去执行循环操作 ④最后才去执行表达式3，也就是最后才实现初始值变化的过程 表达式1和表达3中可以写多个，表达式2,条件只能有一个 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:8","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"9.跳转语句的使用： break关键字：（通常和if选择结构一起使用） 在switch使用break表示结束switch选择结构去执行选择结构外的代码 在循环中使用break表示结束循环结构去执行循环结构外的代码 continue关键字：（通常和if选择结构一起使用） continue只能够在循环结构中使用 在循环中使用continue表示结束当前这一次循环，然后开始下一次循环 使用场合： break常用于switch结构和循环结构中 continue一般用于循环结构中 作用（循环结构中） break语句终止某个循环，程序跳转到循环块外的下一条语句 continue跳出本次循环，进入下一次循环 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:9","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"10.循环结构四要素： 1、初始值，也就是循环要从哪里开始 2、循环条件，循环要到哪里结束 3、循环操作（循环体），就是需要重复做的某些操作 4、计数器（迭代部分），就是每次重复之后，初始值要产生的变化 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:10","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"11.while、do-while和for循环的区别： 1、执行顺序不同 while和for循环：先判断，再执行 do-while循环：先执行，再判断 2、适用场景（循环次数固定推荐使用for循环） for循环只适用于循环次数固定的情况 while和do-while循环无论循环次数是否固定都可以使用 ","date":"2023-04-12","objectID":"/2023/javalean3/:4:11","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"五、数组 ","date":"2023-04-12","objectID":"/2023/javalean3/:5:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"1.数组的概念 在内存中开辟的一串连续的空间，用来存储相同数据类型的，比如：鞋柜只会放鞋子，衣 柜只会用来放衣服 ","date":"2023-04-12","objectID":"/2023/javalean3/:5:1","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"2.数组的基本要素 1、标识符（数组名）：数组的名称，用来区分不同的数组 2、数组元素：存放在数组空间中的数据 3、数组下标：对数组中的空间进行编号，区分每个空间，数组下标从0开始，可以通过数组下标找到对应的空间 4、元素类型：数组的数据类型 ","date":"2023-04-12","objectID":"/2023/javalean3/:5:2","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"3.数组的定义和使用 1、声明数组：告诉计算机数组是什么类型 语法：数据类型[] 数组名 或者 数据类型 数组名[] 比如：String[] args;int[] nums,数组名的命名方式和变量命名方式一样 2、分配空间：告诉计算机要开辟一串连续的多长的空间 语法：数组名 = new 数据类型[数组长度]; 比如：scores = new int[30]; 第一步和第二步可以一起写 数据类型[] 数组名 = new 数据类型[数组长度]; 3、赋值：向开辟好空间里面去存放数据 语法：数组名[数组下标] = 数据; 比如：scores[0] = 60;//表示将数组第一个空间存放了60这个整数 scores[1] = 80; 直接声明数组时就进行赋值 语法：数据类型[] 数组名 = new 数据类型[]{数据1，数据2，数据n}; 数据类型[] 数组名 = {数据1，数据2，数据n}; 注意：如果在声明数组时就直接赋值，那么不要写数组长度 比如：int[] scores = new int[]{60,80,100,50,60,70}; 通过循环的方式动态的录入数据 循环从初始0开始，到数组的最大长度结束，每次加1 for(int i = 0;i \u003c 5;i++){ System.out.println(\"请输入第\"+(i+1)+\"名学生的成绩：\"); scores[i] = input.nextInt(); } 4、数据的使用：将存放在数组空间中的元素拿出来使用 使用循环的方式将存放在每个空间中数据拿出来使用 for(int i = 0;i \u003c 5;i++){ System.out.println(\"第\"+(i+1)+\"名的学生成绩为\"+scores[i]); } 数组名.length表示数组的长度 比如：int[] scores = new int[10]; scores.length = 10;//数组长度为多少，该值就为多少 ","date":"2023-04-12","objectID":"/2023/javalean3/:5:3","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"4.数组的排序 使用Arrays类，使用Arrays的步骤 1、找到有Arrays的商店，语法：import java.util.Arrays; 2、Arrays是一个公用的工具，不需要够买，只要去使用就可以， *语法：*Arrays.sort(数组名); 它会将该数组进行一个升序的排列 二重循环：在一个循环中再使用一个循环结构 循环特点： 外层循环循环一次，内层循环循环一遍（也就是从开始到结束循环完） while循环，do-while循环和for循环之间可以相互嵌套，也就是说while循环可以放while， do-while和for循环，其他两种一样 ","date":"2023-04-12","objectID":"/2023/javalean3/:5:4","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"5.二重循环中跳转语句的使用 continue：如果continue在内层循环中，表示结束内层循环的本次循环，开始内层循环的 下一次循环，如果在外层循环表示结束外层循环的本次循环，开始外层循环的 下一次循环，也就是说，continue在哪一个循环的{}中，就结束哪一个循环的 本次循环，开始该循环的下一次循环。 break：如果break在内层循环中，表示结束内层循环的整个循环，开始执行内层循环外面 语句，如果在外层循环中表示结束整个循环，也就是说，break在哪个循环中，结 束的就是哪个循环的整个循环。 ","date":"2023-04-12","objectID":"/2023/javalean3/:5:5","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"六、类和对象 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"1.OO:Object Oriented 表示面向对象的意思 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:1","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"2.对象 世界由什么组成：水，陆地，草，人，动物，植物，楼房，汽车等等 由所有一切真实存在的东西组成，这些真实存在的东西就叫作对象 属性：就是对象所具有特征 方法：就是对象所执行的行为或操作 对象：用来描述真实存在事物的一个实体，由一组属性和方法组成 封装：对象的属性和方法通常封装在一起，共同体现事物的特性，两者不可分割 类：将对象共同的属性和方法抽取出来就是类 类是模子，定义对象所具有的属性和方法 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:2","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"3.类和对象的关系： 类是抽象的，对象是具体的实体 对象是类的一个实体，类是对象的抽象概念 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:3","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"4.定义一个类的步骤： 1、新建一个class，给这个class取一个类名，名字和你想要定义的类型一致 类名的取名方式，使用帕斯卡命名法，所有单词的首字母大写 2、定义类的属性 3、定义类的方法 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:4","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"5.使用定义好的类： 1、新建一个对象，语法：类名 对象名 = new 类名(); 比如：Car car1 = new Car(); 2、通过“.”操作符来使用这个对象的属性和方法 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:5","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"6.类的无参方法 定义类的方法： 语法：返回修饰符 返回值类型 方法名(){ //具体实现方法的操作 } 比如： public void sayHello(){ //具体实现方法的操作 System.out.println(“你好”); } 1、访问修饰符（在哪些地方能够使用这个方法），public公共的，最高级别 2、返回值类型，执行完方法后能够得到什么数据void，表示没有返回值，也就是没有任何数据返回 如果有数据返回，那么就需要使用return关键字返回一个数据，并且返回的数据类型和返回值的数据类型一致 3、方法名(),方法名表示方法的名字 4、方法体：具体实现方法的操作 编写类的方法步骤： 1、先定义方法的访问修饰符，先写没有返回值类型，定义方法名，方法名的命名采用见 文识意的方式 2、定义方法体，也就是写具体实现方法的操作 3、判断方法是否有返回值，如果有，添加return关键字返回该数据，并修改返回值类型 方法是怎么去实现，方法是怎么实现的只需要在定义方法的关心，使用的时候只要知道是哪一个方 法是什么作用就可以了 方法的调用： 1、在同一个类调用同一类中的方法，只需要通过方法名()就可以指直接调用 2、在不同类中调用方法，需要先new一个需要调用方法的类的对象，然后通过对象名.方法名的方式去调用方法 调用方法的时候，实际上就是去执行方法体中的代码 常见错误： 1、返回值数据类型必须和返回值类型一致 2、不可以返回多个值，也不能写多个返回值类型 3、定义方法不能够相互嵌套 4、程序逻辑代码（顺序、选择、循环结构）只能写在方法体中 面向对象的编程： 类的方法实现某个特定的功能，其他类不需要知道它如何实现，只需要知道它是用来干什 么的 全局变量： (成员变量)它是指定义在类中的变量，它在类中的任意位置都可以被识别 比如：类的属性 1、作用域：作用在类中任意位置 2、初始值不同：如果没有给它赋值，系统会默认给它一个初始值，int类型为0，double 为0.0，String为null 3、在同一个类中不允许同名存在 局部变量： 它是指定义在方法体中变量，它只能在该方法中被识别 1、作用域：作用在定义该变量的方法体中 2、初始值不同：必须给它赋值后才能去使用，系统不会给它赋初始值 3、在同一个类中，不同的方法中可以存在相同的命名，同名的两个变量没有任何关系 在同一个类中，允许局部变量和成员变量命名相同，如果两个命名一样，在使用时，局部变量有 更高优先级 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:6","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"7.类的有参方法 带参数的方法： 无参方法：在方法名()的括号中没有参数的方法 有参方法：在方法名()的括号中有参数的方法 定义有参方法的语法： 访问修饰符 返回值类型 方法名(参数1、参数2、参数3…参数n){ 方法体（具体实现方法的过程） } 参数： 实际就是声明的一个变量，声明的变量使用“,”隔开 在定义方法的时候，方法中的参数只是进行了声明，并没有赋值，这个参数就叫做形式参 数，也就是形参； 在调用方法的时候，对方法中参数进行赋值，这个参数就叫作实际参数，也就是实参 调用带参数的方法： 同一类中调用同一类中的方法，直接方法名()调用 不同类中调用不同类中的方法，先new一个对象，再通过对象名.方法名()的方式调用 必须和定义方法的参数个数相同，并且数据类型必须一致，顺序也要和定义的位置一致 二次传递： 在调用方法的时候，传递一个参数值给该方法，然后在该方法中去调用了另外的方法， 再将这个参数值传递给在该方法中调用的这个方法 F5：单步跳入，遇到方法的时候回进入方法体中，逐方法体的代码一行一行的执行 F6：单步跳过，遇到方法的时候直接执行完方法，获得结果，不进入方法体 对象数组： 就是自己定义的类型的数组 自己定义类型，如果没有new一个对象，那么它的初始就为null 包： 在windows中以文件夹的方式存在 1）将类分为几个类似于文件夹的单元 2）防止命名冲突，在同一个包不允许重复命名，不同包可以重复 3）可以对类中数据中进行一个保护作用 声明包，语法：package 包名; 必须为java源文件中第一条非注释语句 包名： 1、通常由小写的英文字母组成，不能以圆点开头或结尾 2、开头一般是一个顶级域名cn,com,org,net 3、后续部分一般由公司名称、部门名称、小组名称、项目名称 导入包：语法：import 包名; 导入包，可以将在这个包中的所有类导入到我们这个类中，导入后才能使用该包中的类 通过ctrl+鼠标左键点击进入定义方法的位置 ","date":"2023-04-12","objectID":"/2023/javalean3/:6:7","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"八、字符串 1.字符串： 就是一个或多个字符组成 2.声明字符串： 直接声明，比如：String name = “张三”; 使用对象的方式，new一个String类的对象， 比如：String name = new String(“张三”); 3.栈： 用来存储较小的数据，离访问位置比较近，比如：int，double，short。 堆：用来存储较大的数据，离访问位置比较远，比如：String，数组，自己定义的类型 4.引用数据类型： 通过在栈中的地址去引用存储在堆中数据的数据类型 只要使用了new关键字，就表示在堆中新开了一个空间，然后在栈中留下一个地址String类型中的值是不可变的 5.比较字符串： 使用比较的是存储的地址，引用类型地址不相同，不能使用比较 equals比较的是存储的数据，将数据一一比较，字符串使用.equals比较是否相等 equals()比较字符串是否相等 equalsIgnoreCase()忽略大小写比较字符串是否相等 toLowerCase()将字符串中所有字符转化为小写 toUpperCase()将字符串中所有字符转化为大写 6.获得字符串长度： 字符串名.length,获得字符串长度，每个字符就是一个长度 7.字符串的拼接： 1、使用拼接符+进行拼接 2、使用.concat()方法进行拼接 8.字符串的查询和提取 indexOf(\"@qq\")、indexOf(’@’)，查询第一个字符出现的位置 .lastIndexOf(‘7’)、.lastIndexOf(“77”),查询最后一个字符出现的位置 查询：字符串名.indexOf(需要查找字符串名)，返回一个int类型的数据，第一个数从0 开始，返回字符串第一个字符所在位置，找不到指定的字符串返回-1 9.提取： .substring(8)提取第9个字符串后面的所有字符串 substring(8,12)提取从第8个字符到第11个字符，开始的位置从0开始数起，结束的位置 从1开始数起 忽略字符串前后的空格 .trim()忽略字符串前后的空格，中间不能忽略 10.字符串的分割 .split(以什么为分割的字符)，返回一个String的数组，将分割的每个字符串放到这个数组中 11.字符串的替换 .replaceAll(表示替换前的字符，表示替换后的字符)，返回一个String的数据 StringBuffer类，是一个可变的字符串类型 语法：StringBuffer sb = new StringBuffer(“小林”); StringBuffer的拼接： .append(“需要追加的字符串”);追加的时候不会新开辟空间 StringBuffer的插入字符： .insert(插入的位置,要插入的字符); 作者：大灰狼わ 原文链接：https://blog.csdn.net/weixin_44490662/article/details/103005559 ","date":"2023-04-12","objectID":"/2023/javalean3/:7:0","tags":["java"],"title":"java最简单最全入门基础笔记","uri":"/2023/javalean3/"},{"categories":[],"content":"最开始要学习的是 Java 基础，学习了这部分，就会对Java语言有一个初步的了解。其实大部分语言的基础知识都是大同小异，如果之前已经学习过其他语言如C、C++，那学习这部分会更快。","date":"2023-04-10","objectID":"/2023/javalean2/","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":" 我学习Java 已经快三年了，在Java 学习这条路上也踩过无数次的坑，恰巧有小伙伴问我Java学习的路线，我想着趁这次机会分享自己学Java的路线，希望给小伙伴们一点帮助，避开路上的一些坑，一起进大厂。 首先，我先分享下自己对不同学习方式的理解，小伙伴们可以根据自己情况选择。 看视频系统学习，比如培训机构的课程、MOOC的课程等。看视频的好处就是有老师带着，易于理解和掌握，非常适合初学者。 看书学习，如《Redis设计与实现》、《Java并发编程的艺术》，便于了解技术脉络和深入学习知识点。 看博客和源码精进学习。博客的好处是有些知识点会以很通俗的方式讲解出来，我们很好理解。 ","date":"2023-04-10","objectID":"/2023/javalean2/:0:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第一阶段： Java 基础 最开始要学习的是 Java 基础，学习了这部分，就会对 Java 语言有一个初步的了解。其实大部分语言的基础知识都是大同小异，如果之前已经学习过其他语言如C、C++，那学习这部分会更快。 这部分主要学习的内容有：基本程序结构，类与对象，接口，泛型，反射，集合，异常与调试， Java 网络编程， Java I/O和多线程。 学Java基础，推荐大家看尚硅谷宋红康老师的Java教程，宋老师的课程更适合零基础学员，从Java语言起源开始，循序渐进，知识点剖析细致。 宋老师的 Java 基础教程： 除此之外，还可以阅读《 Java 核心技术 卷I》，这本书偏向实用，广度和深度都恰到好处。其中，第7-9章讲述了 Java 的GUI编程， Java 的GUI开发使用并不多，这部分可以先跳过。 Java教程 - 廖雪峰的官方网站 Java 教程 | 菜鸟教程 当学完了这部分，就可以做个图书管理系统、学生管理系统这样的小项目了。还记得库森在大二学完这部分，就跟着教程学做了个贪吃蛇游戏，还是蛮有成就感的。 当然，时间有限的小伙伴，可以不用做这块的项目，直接做 Java Web 项目就好了。 ","date":"2023-04-10","objectID":"/2023/javalean2/:1:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第二阶段：数据库 MySQL 和 Oracle 都是广受企业欢迎的数据库，其中 MySQL是目前应用最广泛的开源关系数据库，对于新手或者校招的小伙伴，我们目前只学习 MySQL 就可以了。 这部分主要学习的内容有：数据库的CRUD操作、JDBCAPI、数据库特性和数据库连接池。 其中，数据库连接池是为了避免频繁地创建和销毁 JDBC 连接，常见连接池包括 C3P0，Druid 和 HikariCP，目前使用最广泛的是HikariCP。 尚硅谷的MySQL入门视频 书籍方面，推荐入门的小伙伴看《MySQL必知必会》，是一本小册子，这本书实践性很强，基本没有什么理论的堆砌，非常适合入门。 如果想要深入学习，可以看《高性能MySQL》，这本书是MySQL领域的经典之作，不过就是太厚了，面试重点看索引部分就可以了。 除此之外，如果要深入学习MySQL的使用和原理，可以看极客时间的专栏《MySQL实战45讲》，阿里资深技术专家讲解的课程，有很多生产经常遇到的问题，非常有深度。 ","date":"2023-04-10","objectID":"/2023/javalean2/:2:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第三阶段： Java Web 学习 Java Web，我们不仅需要掌握后端 Java 技术，还需要学习些前端知识。 前端有三大基础技术 Html、CSS和 Java Script，初学的话，学习这些就可以了。如果想做出更好的交互式效果，可以再学习Vue和React等前端技术。 后端 Java 技术包括 Servlet、Filter、Listener、Session、Cookie、JSP、EL 表达式和 JSTL 等。 其中，像 JSP 这样比较老的技术，目前在各大互联网公司基本不再使用，已经被 Freemark、Thymeleaf 这样的模板引擎所替代，我们只需要了解基本使用即可。 入门 Java Web，推荐尚硅谷的 Java Web 教程，教程不仅包括前端三大技术，还有后端 Java 技术，最后还会带大家做一个书城项目。 Java Web教程 ","date":"2023-04-10","objectID":"/2023/javalean2/:3:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第四阶段：主流框架 这部分我们要学习的主流框架主要有 Spring、Spring MVC 和 MyBatis，俗称 SSM 框架。 曾经的 SSH 框架，即 Struts2、Spring、Hibernate 框架，已经逐渐被SSM替代，现在可以不用再学 Struts2 和 Hibernate 框架了。 学习这些框架之前，我们先来学习项目管理利器Maven和Git。 ","date":"2023-04-10","objectID":"/2023/javalean2/:4:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Maven Maven 是一个项目管理工具，它基于项目对象模型(POM)的概念，它可以管理项目的构建、报告和文档。 Maven 本质就是一个巨大的 jar 包资源库，使用 Maven 构建项目，只需在项目的 pom.xml 中配置相关依赖后，就可以直接从远程仓库同步到本地，再也不用满世界搜索下载 jar 包了，省了很多查找和下载的烦恼。 动力结点的Maven实战入门视频 ","date":"2023-04-10","objectID":"/2023/javalean2/:4:1","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Git Git 是一个开源的分布式版本控制系统，最大作用就是对文件进行版本管理，方便在不同版本进行切换修改，还可以很方便的协作开发。 GitHub 是基于 Git 的代码库托管站，学会了 Git ，我们就能愉快地上 Github 交友了。 狂神说的 Git 视频 廖雪峰的 Git 教程 方便查阅的 Git 中文手册 ","date":"2023-04-10","objectID":"/2023/javalean2/:4:2","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"SSM框架 Spring MVC 是一个基于MVC架构，用来简化web应用程序开发的框架，它是 Spring 的一部分，SpringMVC 已经成为目前最主流的 MVC 框架之一。 MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。 在使用传统JDBC时，往往需要写很多JDBC代码，需要自己写SQL语句以及自己装配参数，然后自己对结果集进行封装处理。 而Mybatis则帮我们简化了以上功能，只需要一些配置文件（xml）或是注解即可完成对数据库的查询以及结果的映射封装。 学习SSM框架，推荐使用一整套课程进行学习，会有更好的连贯性，而且还会学习整合SSM框架。 SSM框架视频 ","date":"2023-04-10","objectID":"/2023/javalean2/:4:3","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Spring Boot 采用约定大约配置的方式，大量的减少了配置文件的使用，从而使开发人员不再需要定义样板化的配置。 学习 Spring Boot，推荐雷丰阳老师的 Spring Boot 课程，课程基于 SpringBoot2.3与2.4 版本，包含核心基础、Web原理、单元测试、数据访问、指标监控等章节。 那要不要跳过了 SSM 直接去学习 Spring Boot呢？ 如果只是为了使用 Spring Boot，当然可以跳过，毕竟 SSM 配置太繁琐了。 如果想深入学习，尤其是找 Java 开发的工作，面试中会出现很多 Spring 的底层问题，因此还是要学习 SSM 的，如果跳过了不利于学习原理。 雷老师的 Spring Boot 课程 ","date":"2023-04-10","objectID":"/2023/javalean2/:4:4","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第五阶段：服务器中间件 学完上面的内容，我们已经具备实际项目的开发能力了，但是要解决些复杂的业务场景，我们还要学习Redis、MQ、Elasticsearch这些中间件。 ","date":"2023-04-10","objectID":"/2023/javalean2/:5:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Redis Redis 是一个 key-value 存储系统，是跨平台的非关系型数据库，可用作数据库，高速缓存和消息队列代理。 Redis作为当下主流的缓存技术，已经成为互联网企业的不二首选。 Redis入门到精通课程：黑马程序员Redis入门到精通 想深入学习的小伙伴，推荐阅读《Redis设计与实现》，知识点非常丰富，讲了很多底层的原理，我曾经看了三遍，对我面试帮助很大，非常推荐！ Redis 设计与实现在线版：Redis 设计与实现 — Redis 设计与实现 查询Redis命令的中文网站：Redis中文教程 ","date":"2023-04-10","objectID":"/2023/javalean2/:5:1","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"MQ MQ（Message Queue）是一种跨进程的通信机制，用于传递消息。通俗点说，就是一个先进先出的数据结构。MQ有三大主要作用分别为解耦、异步、削峰/限流。 目前业界有很多MQ产品，比较出名的有以下四种： 我最开始学习的是Kafka，因为做的项目中使用到了，小伙伴们根据喜好或者项目需要，选择一款MQ学习就可以了。 Kafka 教程：尚硅谷Kafka教程(消息队列kafka快速入门 RabbitMQ教程：【涛哥】最适合小白入门的RabbitMQ教程 此外，如果要深入学习，可以阅读《Kafka权威指南》，这本书由Kafka作者执笔，覆盖比较全面。 ","date":"2023-04-10","objectID":"/2023/javalean2/:5:2","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Elasticsearch 全文搜索属于最常见的需求，开源的 Elasticsearch是目前全文搜索引擎的首选。 它可以快速地储存、搜索和分析海量数据。维基百科、Stack Overflow、Github 都采用它。 Elasticsearch的底层是开源库 Lucene。但是，必须自己写代码去调用Lucene的接口。Elastic 是 Lucene 的封装，提供了 REST API 的操作接口，开箱即用。 ElasticSearch7.6.x最新完整教程 ","date":"2023-04-10","objectID":"/2023/javalean2/:5:3","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"项目实践 学完了这些，就可以把这些技术整合起来做个项目，这里推荐个我做过的社区论坛项目。 这个论坛项目不仅实现了基本的注册，登录，发帖，评论，点赞，回复功能，同时使用前缀树实现敏感词过滤，使用wkhtmltopdf生成长图和pdf，实现网站UV和DAU统计，并将用户头像等信息存于七牛云服务器。 这是项目使用到的相关技术： 这个项目作为Spring Boot实战练手很不错，老师讲解的很清晰，课程的深度和广度都有，而且课程最后还会手把手教大家将项目部署在云服务器。 课程中也会简要讲解Redis、Kafka和Elasticsearch，即使没有学过这些技术，仍然可以学习这个项目。 补充一点，现在的服务器基本都是Linux系统，将项目部署在服务器，学习些基本的Linux命令是必不可少的。 韩顺平 一周学会Linux视频 Linux命令在线查询：Linux命令搜索引擎 Linux命令在线查询：Linux命令搜索引擎 命令，Linux Linux命令搜索引擎 命令详解：最专业的Linux命令大全，内容包含Linux命令手册、详解、学习，值得收藏的Linux命令速查手册。 - Linux 命令搜索引擎 ","date":"2023-04-10","objectID":"/2023/javalean2/:5:4","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第六阶段：微服务和分布式 对于实习和校招的小伙伴来讲，学好前五阶段的技术知识，再深入学习个技术点就可以了，如果还有时间和精力的小伙伴，可以学习微服务和分布式的内容。 ","date":"2023-04-10","objectID":"/2023/javalean2/:6:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Spring Cloud Spring Cloud 是一套完整的微服务解决方案，基于 Spring Boot框架。 准确的说，Spring Cloud 是一系列框架的有序集合，它利用 Spring Boot 的开发便利性简化了分布式系统的开发，比如服务发现、服务网关、服务路由、链路追踪等。 SpringCloud(H版\u0026alibaba)框架开发教程：尚硅谷 ","date":"2023-04-10","objectID":"/2023/javalean2/:6:1","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"Dubbo 值得一提的是，还有阿里开源Dubbo，Dubbo一个高性能优秀的服务框架。简单地说，Dubbo是一个基于Spring的RPC（远程过程调用）框架，能够实现服务的远程调用、服务的治理。 至于Spring Cloud 和Dubbo 有什么区别，大家可以搜索下。这里用网络上一个台式电脑的比喻来说就是：Dubbo 是品牌机，Spring Cloud 是组装机。 Dubbo 视频：Dubbo教程_雷丰阳_尚硅谷 ","date":"2023-04-10","objectID":"/2023/javalean2/:6:2","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"ZooKeeper ZooKeeper是一个高可用的分布式管理与协调框架，基于ZAB算法（原子消息广播协议）的实现。该框架能够保证分布式环境中数据的一致性，使得ZooKeeper成为了解决分布式一致性问题的利器。 zookeeper视频：黑马程序员Java高薪必备教程，分布式技术ZooKeeper深入浅出 ","date":"2023-04-10","objectID":"/2023/javalean2/:6:3","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"第七阶段：进阶优化 学会前面这些，我们就可以独立完成一个小项目，独立完成项目组分配给你的开发任务。 但是这还不足以写出好的代码，我们要想写出好的代码，还需要学习设计模式，学习多线程，以及JVM的内部原理等。同样，这些也是面试的必考点。 设计模式的书籍推荐《HeadFirst设计模式》，这是一本图文并茂的书籍，适合入门。 JVM 的书籍推荐《深入理解 Java 虚拟机》，这本书是 Java 开发者必看的书，很多 JVM 的文章都是来自这本书。 Java 并发方面，可以看《 Java 并发编程的艺术》，这本书深入到JVM、CPU层面讲解了 Java 并发框架、线程池的原理等，面对面试足够了；还有《并发编程实战》，这是一本不错的 Java 并发参考手册。 部分视频课程如下： Java 并发编程视频：黑马程序员全面深入学习Java并发编程 JVM教程：尚硅谷宋红康JVM全套教程（详解java虚拟机） ","date":"2023-04-10","objectID":"/2023/javalean2/:7:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"结束 以上就是 Java 路线的全部内容了，刚入门的小伙伴可能都看头晕了，觉得好多知识点要学。 Java技术栈知识的确是多，但只要按部就班、由浅入深的学习就会轻松一些，还会比较有成就感，即先学会用这个技术，再做个系统性的项目把技术融合起来，最后再来看原理部分，一起加油！变成大牛，服务资本！ 版权声明：本文作者卑微的小白菜，遵循CC 4.0 BY-SA版权协议。 原文链接：https://blog.csdn.net/qq_45225238/article/details/120981714 ","date":"2023-04-10","objectID":"/2023/javalean2/:8:0","tags":["java"],"title":"JAVA详细学习路线","uri":"/2023/javalean2/"},{"categories":[],"content":"自学Java多久才可以出去找工作，这个其实也不固定，根据每个人的吸收情况来说，有的学习4个月就敢出去找工作，一般正常来说学6-8个月就可以找工作了，这至少得每天学习4-6个小时，我当自学的时候每天根据个人的情况制定学习方案和学习计划。","date":"2023-04-08","objectID":"/2023/javalean/","tags":["java"],"title":"经验之谈，Java自学多久可以找到工作?","uri":"/2023/javalean/"},{"categories":[],"content":" 自学Java多久才可以出去找工作，这个其实也不固定，根据每个人的吸收情况来说，有的学习4个月就敢出去找工作，一般正常来说学6-8个月就可以找工作了，这至少得每天学习4-6个小时，我当自学的时候每天根据个人的情况制定学习方案和学习计划 我当时自学的学习计划为一下： 1、 我是19年10月开始学习的，正好是国庆节的那段时间，我当时学习是找的系统的一个视频来看，有要的可以找我要，我花了2个月的时候去学习javase基础的部分学习 基础的内容包含： java的环境搭建，基础语法，面向对象，集合，常用API，控制流程，数组，io流，多线程、反射机制，网络编程 然后利用基础所学的内容做项目 阶段项目实战 打印九九乘法表 打印杨辉三角形 斐波那契数列练习 小游戏 聊天室等 不练这些小项目的话，基础不牢，地动山摇 Javase内容，我每天学习在4-6个小时，最低都在2小时，有时候学到晚上1点也很正常 2、 11月中下旬-12月中旬我学完数据库及jdbc，完成通过jdbc操作数据库实现用户的注册的登录功能，数据库的学习查询必须要过关 数据库 Mysql，Oracle Mysql一定要学会，因为现在互联网公司多数是用这个数据库;学完Mysql要多练习SQL 3、12月-20年的1月份这期间我学的是前端基础及javaee，当时学习的目标就是我要做一个电商项目。 前端 三大核心技术HTML+CSS+JavaScript这三剑客是必须要学的，然后还要学两大基本框架JQuery和Bootstrap 后端 XML，MVC框架模式，Servlet， Filter， JSP， EL， JSTL， Ajax， 代理模式， 工厂模式，数据库连接池 然后也要练习项目，把前面所学的链接起来，比如：OA管理系统，学生管理系统，采购订单管理系统等等，如果不去练习后面学习起来就很吃 项目管理. Maven、Git熟悉去掌握就行了 框架 Spring, SpringMVC,MyBatis,这是必须要学的，如果是新手自学没人带，或者前面没有做项目，很多人在这里就放弃了，学完这2个要过一下这两个框架Struts2、Hibernate SpringBoot, SpringCloud 1、自己搭建一个框架环境(做好备份，入职100%有用) 2、升级一下自己之前练习的MVC架构模式的项目 比如:把Servlet换成springMVC 把JDBC换成MyBatis; 加入Spring去解耦MVC; . 学完之后要是要做项目 比如: ssm客户关系管理系统之类的项目 这个阶段的内容会把前面学习的所有知识涵盖到应用中使用，非常重要，也是从一个从0开始到最后能做出项目的一个分水岭。 以上的学完就可以去找工作了，加油吧 像我所说的情况坚持去学习，找工作是不成问题的 学习的话不能只是赶进度，咱们学习的目的是学懂，所以学习了要记得隔三差五复习前面的，因为在学javaweb之前的，还不知道前面的知识点的具体应用场景，也没有一个完整的项目练习，都是阶段性的小项目，所以复习就非常重要 笔记的话我是下载的有道云笔记，或者写在纸质的笔记本上，反正是不建议直接在视频下发做笔记的，时间一长就找不到了，在云笔记上，以后你进企业了，直接登录就可以用了，有些代码是可以重用的，比如上传下载的代码，避免以后重复造轮子，浪费时间，所以写在云笔记上是很有必要的，当然我建议也可以尝试写博客也可以的，但是这个你写上去之前一定得检查不能出错. java的系统化内容，从Javase- ssm-springcloud，包括了面试题，PDF电子书，网上商城项目，个人博客项目，分布式项目等都有，想学习Java或者转行，大学生等感觉都非常实用。 版权声明：本文作者qq_51082517，遵循CC 4.0 BY-SA版权协议。 原文链接：https://blog.csdn.net/qq_51082517/article/details/120996563 ","date":"2023-04-08","objectID":"/2023/javalean/:0:0","tags":["java"],"title":"经验之谈，Java自学多久可以找到工作?","uri":"/2023/javalean/"},{"categories":["radio"],"content":"无论是用中文还是用英文呼叫，呼号部分一定要用字母解释法解释最少一遍。这样看起来似乎是繁琐，然而在实际通联中，往往不用解释法呼叫的，双方常常为个别发音容易混淆的英文字母反复重复，或者始终就没有抄收正确对方呼号，以致将错就错做一个无效的通联。","date":"2023-04-07","objectID":"/2023/radio3/","tags":["radio"],"title":"CQCQCQ的正确呼叫方法与通联相关知识","uri":"/2023/radio3/"},{"categories":["radio"],"content":" 正确呼叫方法 中文呼叫法：CQ CQ CQ，这里是 BG1XXX ，BRAVO GOLF ONE X-RAY X-RAY X-RAY ，BG1XXX呼叫CQ并等待回答。 英文呼叫法：CQ CQ CQ，This is BG1XXX，BRAVO GOLF ONE X-RAY X-RAY X-RAY，BG1XXX calling CQ and standing-by。 CW呼叫法 ：CQ CQ CQ，DE BG1XXX BG1XXX K 无论是用中文还是用英文呼叫，呼号部分一定要用字母解释法解释最少一遍。这样看起来似乎是繁琐，然而在实际通联中，往往不用解释法呼叫的，双方常常为个别发音容易混淆的英文字母反复重复，或者始终就没有抄收正确对方呼号，以致将错就错做一个无效的通联。 在英文字母中发音如：“A与I”、“B 与G D E J P T”、“F与M”、“J与Z”、“O与U”的发音由于业余无线电台音频带宽窄，以及中国人英文发音普遍不够准确，很容易产生混淆。 还有些个别的电台为了区分呼号中英文“J”与”Z”、“S”与“X”的读音，故意把 “J”读做“钩”，把 “X”读做“叉”。这种人为因素造成的混乱情况，是完全能够避免发生的。 解决上述问题的唯一方法就是用解释法对呼号解释，否则通联双方为抄收、确认呼号所耽误的时间，比一开始就用解释法呼叫要麻烦的多。 信号报告 给通联对方一个信号报告，是通联过程中必不可少的程序。但是在很多U/V段上，我们时时都可以听到五花八门的的信号报告。首先大家都知道信号报告是有相关指标规定的，但是还是有很多朋友由于在入会培训时没有认真听讲座，也没有仔细阅读学习复习材料上面关于如何做信号报告和信号报告可辨度的分级。主要是跟着学频率上别人给信号报告的方法，对信号报告两个数字的含义不甚了解，甚至出现以讹传讹啼笑皆非的信号报告。 如： “你的信号59，有10％的背景噪音” “你过来的信号7个豆” “你的信号满表” 这些信号报告的错误原因主要是对信号分辨度与信号强度正确地表示缺乏了解。在语言通讯中的信号报告共有两个部分： 一个部分是信号（语言）的可辩度，用“R”表示，R共分1至5个级别； 另一个部分是信号的强度，用“S”表示，S共分1至9个级别。 信号可辨度R的级别越高语音就越清晰，R的级别到了5的时候，话音质量如同我们接听有线电话的音质一样，无任何一点噪音存在。而信号强度S的级别越高，说明收到的信号强度越强，这在有S表的电台中有清晰的显示。所以当我们听到一个声音洪亮没有任何噪音的语音，并观察到电台S表的强度为9，我们就可以给出59的信号报告。 而当S表显示为9，但是对方语音伴有噪音时，就不能给59的信号报告，这时应该根据对方语音中噪音的影响大小，给出49，39，甚至29的报告，而无需给出百分比噪音值，因为只要报出话音R在5以下时，就会知道有背景噪音存在。 有的朋友在信号报告中报几个豆或者满表，这则属于是不完整不规范的报告。这样的报告是跟据电台S表的显示的强度，给出的单一信号强度S，缺少语音分辨度R的报告。即使S表显示是满表，或者是S表显示9个（豆豆）格，而其信号报告有可能是59，也有可能是49，39……，甚至全部是噪音。因为在对方只掐键不说话的时候，S表同样显示出与说话一样的强度，然而这时只有噪音。 由于信号报告是通联中不可以缺少的要素之一，也是通联中一个最应该掌握的基本技术，因此我们不应忽视这个问题。 主动的给对方一个信号报告，也是通联中的礼貌。被呼叫方第一次回答呼叫方时就主动给出对方的信号报告，是规范通联中常见的方法。下面举例如BG1YYY听到BG1XXX呼叫后互换信号报告的通联对话： BG1YYY:“BG1XXX,这里是BG1YYY,您的信号59，我的QTH在北三环联想桥，OVER。” BG1XXX:“抄收了，BG1YYY,谢谢您给我59的信号报告，您的信号到我这里也是59，非常漂亮的信号。我的QTH在安定们。 这里是BG1XXX。OVER” 在通联中若不是检测、试验设备，需要别人提供一个准确的信号报告时，只要能够完全抄清楚对方的说话，就可以给出59的报告。给对方一个美好的信号报告也是一种礼貌和美德，同样也是实际通联中的惯例。 关于“插入”的问题 在频率上听到有电台在通联而自己有急事需要使用频率，或者对正在通联方讨论的话体感兴趣希望加入的情况下，在双方通话告一段落时可以“请求插入”，但同时要报上自己的呼号， 如： 中文：“请求插入，这里是BG1XXX”； 英文：“Break in This is BG1XXX” 中文：“BG1XXX请求插入”； 英文：“BG1XXX Break in” 无论是插入话题还是有急事，插入者都要经过正在通联人的同意方可使用频率。因为这个时候频率的使用权是属于正在通联双方的，其他人是没有权利同意插入者使用话筒的。更不能在没有得到正在使用频率人的同意就强行插入，以及插入的目的只是为了获取一个信号报告。我们常常在400兆上听到有人喊“插入”后，在通联的双方还没有同意插入者使用话筒时，就有很多正在守听的人已经让“插入请讲”了，这是一种极其不礼貌的行为。 当正在使用频率通联的双方同意请求插入者使用频率时，插入者应该对允许自己插入使用话筒的通联的双方表示感谢，而且使用频率要简单明了尽快结束，或者约上你要通联的对象QSY到其他频率，并将话筒交还允许你插入的通联双方，并再次表示感谢。而不应该说完就一走了之，更不能由此而将自己转换成频率的占用者。 遇到恶意干扰怎么处理 由于U/V段业余频率资源的限制，HAM队伍又呈现几何状上升，非法电台和很多单位的专业电台的大量侵入，使得U/V频率上显得人满为患，混乱、不和谐的状况不断发生。但我们在频率上通联或者守听中，遇到恶意干扰信号时，作为一个HAM，首先要冷静下来，不应该出口反击甚至恶语相加。 因为QR-MIKE的出现有时情况很复杂，有些时候有可能是某些HAM在掐键试机，有些时候是工业干扰，还有些时候是专业电台误闯入，当然更多的是人为的恶意干扰。而人为的恶意干扰一般都是转播其他（如其他频点的信号、广播等）信号，或者只是掐键时发出的噪音。 恶意干扰固然是一种素质低下、可恶、令人气愤的行为，但是当我们奋起反击时，却恰恰助长了这种行为。因为恶意干扰的人，就是希望使你不愉快，你的反击就是发送给他一个信号报告，告诉他你完全抄收到了他的干扰，你这时火冒三丈，而他在一旁却因为挑逗成功而窃窃自喜。 更何况在他掐键发射干扰时，你反击的信号他是根本听不到的。更重要得是，我们的反击会给无线电监测部门的监测带来很大麻烦。所以，我们遇到这种情况时，只有静默才有利于监测部门对干扰信号准确的定位。 在U/V段，很多朋友的电台都是设置在汽车内，而汽车内所搭载的人不一定都是无线电爱好者，父母、妻子、孩子、领导、朋友，都有可能是我们车中的一员。恶意干扰出现时最多是噪音或者是转插的广播、音乐等，很少有语言干扰。我们车内的乘客并不了解电台中发生了什么，我们只需停止通联关掉电台，这一切就都会过去。 如果，这时我们车内的亲属、朋友听到电台内传来的是反击恶意干扰的破口大骂，他们会怎么想？会怎么看待我们HAM的素质？甚至会对我们的爱好都会产生质疑，目前已经出现多起家长、妻子，因为听到电台中的一些内容而禁止自己的孩子、丈夫再接触电台的情况。由此可见，破口大骂恶意干扰的行为远远超过了恶意干扰所带来的恶劣影响，在调查中得知，破口大骂反击恶意干扰的行为才是频率中的首恶，而不是恶意干扰行为的本身。因此，为了净化空中秩序，为了我们更好的玩好无线电，更为了我们全体HAM的荣誉，遇到恶意干扰时，请大家静默吧！ 关于73的问题 “73”是全世界业余无线电在话和CW用于祝福的专业术语。在通联结束前给对方送上一个美好祝福，既是一种礼貌，也是体现HAM精神和良好素质的一种象征。 “73”这个数字自1892年起，就在国际上应用于等符电报中，在这里， 73是问候语，是电报员间表示友善的“语句”，并通用於所有电报。后来逐步发展用于话，其含义为：“把美好的祝福送给你”。 由此可见，73本身已经含有“送给你”的意思,我们频率上常常听到的 “把美好的73送给你”，这种说法要是把73展开来看就成了“把美好的（把美好的祝福送给你）送给你。因此只需一个“73”，“送给”和“祝福”已经都包含其中了。 “73”是祝福，我们没有必要对“祝福”进行修饰，否则会闹出笑话。如：“送给你一个大个的73”、“送给你一个镶金边的73” 送给别人的祝福怎么会有大有小、质地之分呢？又如：“暂时73”，送给对方的祝福只是暂时的，难道是一会儿还要收回？ “73”就是祝福，不等同于“再见”，当您通联结束给对方送上73后，应该再礼貌的说一声再见。我国台湾的通联规范是先道再见再送73，这也是一种方式。 ","date":"2023-04-07","objectID":"/2023/radio3/:0:0","tags":["radio"],"title":"CQCQCQ的正确呼叫方法与通联相关知识","uri":"/2023/radio3/"},{"categories":[],"content":"Markdown 使普通文本具有格式，但它的原生语法并不支持修改前景色和背景色。为了实现丰富文本颜色的需求，我们需要通过增加 HTML 标签实现此类效果。","date":"2023-04-07","objectID":"/2023/markdown1/","tags":["markdown"],"title":"Markdown怎么实现前景色、背景色","uri":"/2023/markdown1/"},{"categories":[],"content":" 1.前言_ 颜色可以使普通文字表达出更深刻的含义，比如红色用于醒目与警示、绿色用于表达良好与正常等。 Markdown使普通文本具有格式，但它的原生语法并不支持修改前景色和背景色。为了实现丰富文本颜色的需求，我们需要通过增加 HTML 标签实现此类效果。 环境说明： 考虑到 Markdown 工具之间的不兼容，有的内容直接从页面复制粘贴到本地不会正常显示，大家学习时自己动手写是肯定没问题的。本节所有实例代码及演示效果均使用 Typora 工具完成。 本节所有截图均为 Typora 导出为 HTML 后渲染效果。 2.语法详解 2.1 前景色 在 Markdown 文件中，建议使用 标签的 color 属性修改文字颜色。 实例 1： 使用\u003cfont\u003e 的标签的修改文字前景色 \u003cfont color=\"red\"\u003e红色\u003c/font\u003e \u003cfont color=\"green\"\u003e绿色\u003c/font\u003e \u003cfont color=\"blue\"\u003e蓝色\u003c/font\u003e \u003cfont color=\"rgb(200, 100, 100)\"\u003e使用 rgb 颜色值\u003c/font\u003e \u003cfont color=\"#FF00BB\"\u003e使用十六进制颜色值\u003c/font\u003e 渲染结果如下： 红色 绿色 蓝色 使用 rgb 颜色值 使用十六进制颜色值 除了修改color属性外，还可以使用style样式属性修改文字颜色。 实例 2： 使用style 的标签的修改文字前景色 \u003cfont style=\"color: red\"\u003e红色\u003c/font\u003e \u003cfont style=\"color: green\"\u003e绿色\u003c/font\u003e \u003cfont style=\"color: blue\"\u003e蓝色\u003c/font\u003e \u003cfont style=\"color: rgb(200,100,100)\"\u003e使用 rgb 颜色值\u003c/font\u003e \u003cfont style=\"color: #FF00BB\"\u003e使用十六进制颜色值\u003c/font\u003e 其渲染结果如下： 红色 绿色 蓝色 使用 rgb 颜色值 使用十六进制颜色值 2.2 背景色 Markdown 文档中定义文字背景色需要通过修改 style 样式实现。 实例 3： 使用style 属性修改文字的背景色 \u003cfont style=\"background: red\"\u003e红色\u003c/font\u003e \u003cfont style=\"background: green\"\u003e绿色\u003c/font\u003e \u003cfont style=\"background: blue\"\u003e蓝色\u003c/font\u003e \u003cfont style=\"background: rgb(200,100,100)\"\u003e使用 rgb 颜色值\u003c/font\u003e \u003cfont style=\"background: #FF00BB\"\u003e使用十六进制颜色值\u003c/font\u003e 其渲染结果如下： 红色 绿色 蓝色 使用 rgb 颜色值 使用十六进制颜色值 实例 4： 利用 style 的丰富样式，我们可以定义出丰富的文字形式。 更丰富背景样式 使用图片作背景 \u003cfont style=\"background: url('https://ooyang.cn/img/logo.png') \"\u003eI wish you a Merry Christmas\u003c/font\u003e I wish you a Merry Christmas 渐变背景色 \u003cfont style=\"background: linear-gradient( to right, #ff1616, #ff7716, #ffdc16, #36c945, #10a5ce, #0f0096, #a51eff, #ff1616);\"\u003e太阳太阳，给我们带来，七色光彩\u003c/font\u003e 太阳太阳，给我们带来，七色光彩 3. 使用场景及应用实例 利用前景色和背景色、以及字体字号等样式，我们可以定义出丰富的渲染主题，以适应不同的设备或阅读需求，比如阅读类 APP 中常见的夜晚模式、笔记类 APP 的更换纸张的效果等。 实例 5： 夜读模式 \u003cstyle\u003ebody { background-color: #000 !important; } h1,h2,h3,h4,h5,h6,h7,p { color: #999 !important; }\u003c/style\u003e 小结 同一颜色值在不同显示器上会有色差，选取颜色时尽量使用安全色。 为了确保整篇文章的整体风格一致，通常只需要配置全局的前景色和背景色即可。 对于颜色，请尽量使用柔和的颜色，防止刺伤眼睛。 如果我们对颜色的设计没有很好的经验，可以尝试使用其他设计师们设计好的主题。比如如果用 Typora 的话，可以在 Typora 的菜单里切换或下载其他主题。 ","date":"2023-04-07","objectID":"/2023/markdown1/:0:0","tags":["markdown"],"title":"Markdown怎么实现前景色、背景色","uri":"/2023/markdown1/"},{"categories":["radio"],"content":"由于建筑物/地形等的遮挡，在地面上的2个电台之间的信号可能无法互相传送到。通常5W手台，在市区，2公里以外就无法通连了。为此，人们在高处建立一个天线并设置一台大功率的特殊的收发电台，负责把一个频点上收来的信号（比如434.460）转发到另外一个频点上（比如439.460），于是在它覆盖范围内的电台都可以和它联系，也就是通过它和其他人联系，于是大家就通过中继台达到覆盖更广的通连范围，帮助小功率设备扩大信号的目的。","date":"2023-04-07","objectID":"/2023/radio2/","tags":["radio"],"title":"名词解释:中继、频率、频差、亚音、直频、倒频","uri":"/2023/radio2/"},{"categories":["radio"],"content":" 什么是中继？ 由于建筑物/地形等的遮挡，在地面上的2个电台之间的信号可能无法互相传送到。通常5W手台，在市区，2公里以外就无法通连了。为此，人们在高处建立一个天线并设置一台大功率的特殊的收发电台，负责把一个频点上收来的信号（比如434.460）转发到另外一个频点上（比如439.460），于是在它覆盖范围内的电台都可以和它联系，也就是通过它和其他人联系，于是大家就通过中继台达到覆盖更广的通连范围，帮助小功率设备扩大信号的目的。 通常的中继台需要使用一对频点，一个频点用来接收来自使用者手台或车台的信号（上行信号，如434.460），当收到时，在另一个频点上广播出去（下行信号，如439.460）。由于中继台占有比较好的地理位置，同时有比较大的发射功率，所以通过中继台能够联络到更多的人。 使用中继的人的手台或车台的收发频率要和中继的收发频率相反，才可以打开中继。 什么是频率？ 通常我们说的频率就是指下行频率。所谓“上行”频率是指电台的发射频率，而对应的“下行”频率，就是中继台发射的频率，也就是电台的接收频率（即守听频率）。因为一般用“下行”频率来标示一个中继的频率，一般也称下行频率为面频，相应的上行频率就称为“底频”。 什么是频差？ “下差”，一般使用中继设备通讯的时候，都是是用不同的发射和接受频率，接受频率和发射频率之间的频差称之为“差频”，差频又分为上差和下差，一般我们都使用下差，也就是发射频率低于接收频率，以460中继为例：发射频率是434.460，接受频率是439.460，两者相差5MHz，我们称之为下差5MHz，这是一般业余电台的设置方法，因为有些业余电台差频是被固定的，就是5MHz，当然也有一些地方将差频设置的比较特殊，比如香港有些中继就是设定成9.850MHz。 什么是亚音？ 哑音是用于在同一频率上有多个电台通讯时，防止与自己不相干的电台干扰的一种方法。哑音有多种，最常用的亚音就是CTCSS（连续音频编码静噪系统），Motorola称为PL，是属于模拟亚音，频率从67.0Hz、69.3Hz、一直到250.3Hz，共39个亚音点（或50个点）。发射时把这个低频的不可听到的信号（因此叫亚音）连续的叠加到频率上发射，对方只有接到这样的同样频率才接收之，用于抗干扰，或者不听不是给自己的信号。 亚音分发射亚音和接收亚音两种。一般，为了能上中继，都是使用发射亚音，这样才能打开中继。而中继自己采用的就是“接收亚音”，没有亚音的信号就被排斥了。中继下来的信号有的不带亚音但也有带亚音的。 同样，自己接收时，为了能排斥自己不需要听的信号，也可以同样加上接收亚音。这样，两个电台（或几个电台）之间也可以使用约定的亚音，用于排除外来干扰信号。 尽管说是亚音，但事实上是可以听到的，尤其是把亚音设置在高限（250Hz附近），或者接收机的低频频响比较好的时候。因此，我们设置亚音的时候，都尽量设置的低一些，以免不必要的干扰。 另外有一种亚音是DCS（DigitalCoded Squelch），属于数字亚音，Motorola称为DPL，有104个亚音点（DPL少一些），更先进，是在语音前和发射结束前利用数字编码的形式发射。这种亚音只能同时发射和接收（即不能设置只发射而不接收的）。 误区：发射亚音时，接收方只有设置到亚音接收才能接收。错！事实上正相反。发射亚音时，接收方设置到“非亚音接收状态”一定能接收，设置到“亚音接收状态”时，必须亚音类型一致、同时亚音码一致才能接收。 很多HAM和SSG都误认为哑音是一种加密功能，其实不然。假设两部对讲机A和B，A机设置了发射哑音而B机没有设置接收哑音B机仍然可以接收到A机发射的语音；如果B机设置了接收哑音而A机没有设置发射哑音，那么B机就接收不到A机发射的语音。中继台为了不被杂波信号干扰误打开发射机，就设置了接收哑音，那么想打开中继台的手台就要设置发射哑音才能打开。在群组通联中使用哑音，说白了就是接收者为了自己的耳朵清净。群组通联设置哑音还有一个好处就是可以充分利用频率资源，比如都在438.5MHz频点上，A组可以设置88.5KHz的双向哑音，B组设置100KHz的双向哑音，那么A组合B组互相听不到对方组的语音，这样就可以共用一个频点，节省了频率资源。 什么是直频？ 所谓直频，就是两个电台用同一频率通联的清醒。许多火腿为了测试，在有中继的时候不使用中继，直接使用中继的下行频率即守听频率进行通连。 直频通连具有信号好（没有通过中继）、影响范围小、对中继不干扰、同时不改变中继守听的特点，因此适合近距离的通连。 例如某中继的上行频率为434M，下行频率（即守听频率）为439M，则直频就是收发都用439M。一方采用直频后，应建议对方也改成直频，否则双方尽管可以通连，但对方的信号是通过中继下来的，仍然影响全局并听起来只有一方说话比较奇怪。当双方都使用直频时，在通连的间隙仍然在监听中继信号。 什么是倒频？ 所谓倒频，就是在有中继的时候一方不使用中继，而是把中继的使用的两个收发频率倒过来使用的一种通连方式。也称为“反频”。 倒频通连具有信号直接（没有通过中继）、不改变对方使用中继的方式，因此适合在对方不知不觉的情况下进行直接通连测试。 例如某中继的上行频率为434M，下行频率（即守听频率）为439M，则我方采用倒频后，就是收用434M、发用439M。这样，我方直接收听对方的上行频率而不是从中继下来的频率，对方收到的是我方的直接频率也不是从中继下来的，因为我方根本就没有打开中继。 这样做的好处是对方可以不改变任何设置，仍然使用中继方式，同时可以试验两个频率的直接通连情况。倒频也经常用于检查对方上行信号的强度与质量。 这种做法的弱点是只有一方的信号在中继中出现，显得比较怪异。但若监听者距离倒频使用者比较近，他可以同时收到直频发射的。一般来讲，若发现倒频的通连非常顺利，就可以改为直频通连而把中继让出来。 *倒频通常是用于检查对方直接过来的信号强度是否足够，从而确定通连的双方是否在直频通连的范围内，以便改用直频通连。 也可以定位干扰源！寻找恶意干扰者 有些对讲机为了方便倒频操作，设有快捷键，使得在中继操作中可以很方便的使用倒频。这个功能在Yaesu和Kenwood的手台上很常见。 ","date":"2023-04-07","objectID":"/2023/radio2/:0:0","tags":["radio"],"title":"名词解释:中继、频率、频差、亚音、直频、倒频","uri":"/2023/radio2/"},{"categories":[],"content":"记录福州老杨的博客日志","date":"2023-04-07","objectID":"/2023/myblog/","tags":["blog"],"title":"福州老杨的博客日志","uri":"/2023/myblog/"},{"categories":[],"content":" 2023-04-10 java入门课程下载开始学习。 2023-04-08 博客初步搭建完成，针对loveit的css做了部分修改，文章10篇，域名续费3年。 ","date":"2023-04-07","objectID":"/2023/myblog/:0:0","tags":["blog"],"title":"福州老杨的博客日志","uri":"/2023/myblog/"},{"categories":["radio"],"content":"中国的无线电爱好者使用的呼号有10个前缀，最常见的只有5个。下面我们以BG5VGE这个呼号为例，介绍一下中国呼号中各个部分的含义。我们首先将BG5VGE分成三个部分，即BG与5与VGE。","date":"2023-04-06","objectID":"/2023/radio1/","tags":["radio"],"title":"中国业余无线电呼号的含义","uri":"/2023/radio1/"},{"categories":["radio"],"content":" 中国的无线电爱好者使用的呼号有10个前缀，最常见的只有5个。下面我们以BG5VGE这个呼号为例，介绍一下中国呼号中各个部分的含义。我们首先将BG5VGE分成三个部分，即B与G与5与VGE。 第一部分为国家冠字：中国区为B 第二部分为电台操作人的级别：“A、D、G、H”表示个人电台，其中“A”代表一级，“D”代表二级，“G、H”代表三、四级，一般都应为四级操作证书。因此BG5VGE是三级或四级火腿。（注：适用于早期的无线电爱好者呼号识别，新政策不定义火腿等级）。 第三部分也是前缀，用来表示HAM火腿所在的地区。中国的业余无线电台被划分为十个区，其中北京是第1区，福建、江西、浙江三省是第5区，因此BG5VGE这位火腿在这三省中的某一省。下面是十个区的具体划分。 第1区：北京 第2区：黑龙江 吉林 辽宁 第3区：河北 内蒙古 山西 天津 第4区：江苏 山东 上海 第5区：福建 江西 浙江 第6区：安徽 河南 湖北 第7区：广东 广西 海南 湖南 第8区：贵州 四川 云南 第9区：甘肃 宁夏 青海 陕西 第0区：西藏 新疆 第四部分是后缀，由2~4位英文字母组合表示，用来区别不同的火腿。 在中国大陆之外，台湾呼号的最常见前缀是BV、BX、BM，例如BV2AC，香港呼号的前缀是VR2，例如VR2UNA，澳门呼号的前缀是XX9，例如XX9AU。 ","date":"2023-04-06","objectID":"/2023/radio1/:0:0","tags":["radio"],"title":"中国业余无线电呼号的含义","uri":"/2023/radio1/"},{"categories":["website"],"content":"好看漂亮的404网页代码,404源码下载","date":"2023-04-01","objectID":"/2023/404/","tags":[],"title":"404错误页面源码模板大全,提供下载","uri":"/2023/404/"},{"categories":["website"],"content":"404代码的由来 404是一个http错误代码，指的是网页不存在。这些错误代码是一个叫Tim Berners-Lee定义的。他在1990年开发了世界上第一款网页浏览器。http错误代码是在ftp 错误代码的基础上演变而来的。 ","date":"2023-04-01","objectID":"/2023/404/:0:1","tags":[],"title":"404错误页面源码模板大全,提供下载","uri":"/2023/404/"},{"categories":["website"],"content":"404代码的含义 第一个4表示客户端出错，第二个0表示你把网址打错了；最后表示这个错误代码在4开头的错误代码中排行老四。(潘进雄) ","date":"2023-04-01","objectID":"/2023/404/:0:2","tags":[],"title":"404错误页面源码模板大全,提供下载","uri":"/2023/404/"},{"categories":["website"],"content":"404错误页模板下载 文件名 下载:按右键另存为 1-fargo-404 演示 2-css-train-404 演示 3-no-signal-404 演示 4-astronaut-404 演示 5-glitchy-404 演示 6-svg-animation-404 演示 7-bunch-of-eyes 演示 8-daily-ui-404 演示 9-error-example-404 演示 10-error-404-animation 演示 11-dan-gold-404 演示 12-fog-dissipates 演示 13-404-rolling-box 演示 14-saransh-sinha-404 演示 15-andrew-lawendy-404 演示 16-space-invaders-game-404 演示 17-trembling-eyes-404 演示 18-galaxy-not-found 演示 19-spacy-with-count-up 演示 20-ghost-404 演示 21-404-particles-with-pixijs 演示 22-code-theme-404-page 演示 23-lost-and-alone-404 演示 24-no-vacancy-404 演示 25-404-apocalypse 演示 ","date":"2023-04-01","objectID":"/2023/404/:0:3","tags":[],"title":"404错误页面源码模板大全,提供下载","uri":"/2023/404/"},{"categories":["radio"],"content":"APRS是一种自动位置报告系统，为业余无线电中的一个项目,可使业余无线电操作者迅速的将实时事件相关的数据发布出去，并在电脑或手机上的地图软件显示这些数据(定位)的软硬件系统。可以通过电台，手机将从GPS得到的定位数据自动发送到接收端igate基站(APRS网关)再转发到互联网或直接上传到互联网上","date":"2023-03-28","objectID":"/2023/aprs/","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"什么是APRS APRS 是一种自动位置报告系统为业余无线电中的一个项目, 可使业余无线电操作者迅速的将实时事件相关的数据发布出去， 并在电脑或手机上的地图软件显示这些数据(定位)的软硬件系统。 可以通过电台，手机将从GPS得到的定位数据自动发送到接收端igate基站(APRS网关)再转发到互联网或直接上传到互联网上， 这样其他无线电爱好者可以通过电子地图（例如https://aprs.fi/ http://aprs.cn/ 实时获得对方的地理位置，行动方向和运动速度。 简单说GPS导航可以让自己知道在什么地方，APRS不但可以知道自己在哪里，也可让其他人知道你在哪里。 电台使用无连接分组基于一对多进行数据发布，类似于广播电台和听众的关系。随着APRS的发展，现在APRS的设备大抵分为APRS节点、APRS网关(IGate)、APRS服务器等。 ","date":"2023-03-28","objectID":"/2023/aprs/:0:1","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"什么是APRS网络 APRS的网络一般可以理解由两个部分组成，其中一部分为电台射频网络（简称“APRS-RF”网络），另一部分为互联网服务网络（Internet Service，简称“APRS-IS”网络），而电台射频网络和互联网服务网络又可以通过互联网网关（Internet Gateway，简称“IGate”）连接起来，实现各种台站信标、气象信息、短消息等数据的双向传递，从而形成一个大型的APRS数据传输网络。 ","date":"2023-03-28","objectID":"/2023/aprs/:0:2","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS 地图网站 大家所熟悉的 aprs.fi aprs.tv aprs.cn 等网站具有地图显示台站等功能的网站，其实并不是APRS互联网服务网络体系的一部分. 而是一种APRS-IS网络发展出来的一个终端服务产品，它们的工作原理是，从APRS的某个服务器中收取整个网络的实时数据，然后在地图上的实时数据显示、历史数据查询、台站覆盖范围推测（PHG）、台站收听列表显示（Heard List）等各种强大的扩展功能供爱好者读取使用。 ","date":"2023-03-28","objectID":"/2023/aprs/:0:3","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS使用频率 中国APRS使用144.640MHz频率 ","date":"2023-03-28","objectID":"/2023/aprs/:0:4","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS软件 APRSdroid http://aprsdroid.org/download UISS 普通电台和电脑收发APRS信号的软件 ","date":"2023-03-28","objectID":"/2023/aprs/:0:5","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS功能的电台列表 联畅HG-UV98 自由通AnyTone AT-D868UV 自由通AnyTone AT-D878 八重洲多款型号 威诺VR-N7500车台 威诺n75手台 ","date":"2023-03-28","objectID":"/2023/aprs/:0:6","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS的实现方法 APRS软件 : 即使没有硬件设备，你也可以向 APRS 网络发送信息。当然，前提是您已经取得了呼号，因为你通过网络发送的信息可能会通过一些双向网关转发到射频信号。 安卓手机APP,名称APRSdroid，利用手机本身的定位功能收集定位数据后定时通过Internet收发到 APRS 网络。这些软件可以让你直接体验 APRS。在其它平台上也有很多优秀的多功能软件。 APRS硬件 : 一个普通的电台连接TNC就能实现APRS,例如国内知名的马工开发的APRS盒子。 声卡软件 : 将声卡用作调制解调器的软件,比如 UISS 软件就内置了软件调制解调器，你只需要连接音频，它就可以收发 APRS 信号。 安卓软件 APRSdroid 和 HT 也具备这样的功能，只需音频线连接电台，即可收发 APRS 信号，不仅仅是位置信号，还可以发送和接收 APRS 短信。 ","date":"2023-03-28","objectID":"/2023/aprs/:0:7","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS验证码 APRS网络由互联网和无线电组成，我们需要一种方法来阻止未经许可的用户被传输到无线电网络。当 APRS系统与服务器连接时，需要验证一个号码。这个号码就像一个密码，根据你的呼号计算出来，它是唯一的。也就是说，连接到互联网服务器的 I-gate网关和软件都需要验证密码，因为它们发出的信息可能会被其它电台通过无线电发送出去。 ","date":"2023-03-28","objectID":"/2023/aprs/:0:8","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"如何申请APRS-IS的验证码 申请APRS-IS的验证码的网址https://aprsdroid.org/passcode 其中Grid square：为HAM QTH 梅登黑德定位信息。 成功提交之后的几天,您的邮箱将会收到验证码了。这种方法获得验证码的时间比较慢。 ","date":"2023-03-28","objectID":"/2023/aprs/:0:9","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":["radio"],"content":"APRS验证码的计算 是的APRS验证码是可以根据呼号被计算出来的,苹果手机应用商店里面就有APRS计算的app服务,不过是收费的。 老杨免费提供APRS验证码的计算,只需把无线电执照带呼号页面拍照并发邮件到 ","date":"2023-03-28","objectID":"/2023/aprs/:0:10","tags":["APRS"],"title":"APRS自动位置回报系统","uri":"/2023/aprs/"},{"categories":null,"content":" 本人姓名杨宪荣，一名无线电爱好者，摄影爱好者，JAVA入门学员。网名Oyang，故注册域名ooyang.cn 用来收藏好的文章并分享记录个人的博客日志。 网站名称：福州老杨 网站地址：http://ooyang.cn 作者呼号：BG5VGE 微 信：BG5VGE 站内导航 博客日志 跳转 网址导航 跳转 仓库资源 跳转 ","date":"2023-03-13","objectID":"/about/:0:0","tags":null,"title":"关于我们","uri":"/about/"},{"categories":[],"content":"个人常用的内容收藏包括git常用命令,常用网站等信息","date":"2023-03-13","objectID":"/2023/tool/","tags":[],"title":"个人常用的内容工具等收藏","uri":"/2023/tool/"},{"categories":[],"content":" 常用网站 百度 Bing bing翻译 百度翻译 金山待办 社保 医保 QQ邮箱 Java github gitee localhost 百度统计 git常用命令 添加到库 git add . 提交修改到本地库 git commit -m \"1\" 推送push– git push -u origin main 几款好用的markdown编辑器 loppo: 非常简单的静态站点生成器 idoc：简单的文档生成工具 gitbook：大名鼎鼎的文档协作工具 docsify：一个神奇的文档站点生成器，简单轻巧，无需静态构建html 陆续补充更新 ","date":"2023-03-13","objectID":"/2023/tool/:0:0","tags":[],"title":"个人常用的内容工具等收藏","uri":"/2023/tool/"},{"categories":["radio"],"content":"业余无线电爱好者入门知识","date":"2023-03-13","objectID":"/2023/radio/","tags":["radio"],"title":"业余无线电爱好者入门知识","uri":"/2023/radio/"},{"categories":["radio"],"content":"无线电爱好者介绍,入门基础知识 介绍 无线电爱好者是无线电领域里的一群特殊的群体，被称为“火腿族”，英文HAM；他们不是专门从事无线电工作的，却掌握了一定电子技术学习、制作、使用无线电，以对无线电的学习、应用和掌握从而对其产生的乐趣，实现生活、学习和工作的简单问题。 如果你问十个Ham火腿（业余无线电爱好者的同义词），什么是业余无线电，你可能得到十个不同的答案。业余无线电是一种以无线电通联为方式、以无线电研究为目的的个人业余爱好，但对于不同的Ham，业余无线电有不同的吸引力。例如，有些Ham喜欢使用手持电台或车载电台，与本地的Ham通联；有些Ham喜欢使用短波电台，与全世界各地的Ham通联；有些Ham喜欢将电台与计算机结合起来，利用无线电-数字混合技术，与国内外Ham交换各种信息；有些Ham喜欢参加国内外的各种通联竞赛，以获得奖状为最大乐趣；当然，也有许多Ham喜欢上面提到的所有通联方式。 原理 无线电技术的原理在于，导体中电流强弱的改变会产生无线电波。利用这一现象，通过调制可将信息加载于无线电波之上。当电波通过空间传播到达收信端，电波引起的电磁场变化又会在导体中产生电流。通过解调将信息从电流变化中提取出来，就达到了信息传递的目的。 通联方式 1.本地通联 使用手持电台或车载电台，与本地Ham通联。这里所说的“本地”，有时是指Ham所在的城市，例如北京市，有时是指Ham所在的社区，例如丰台区。本地通联一般使用 UHF（超高频）或 VHF（甚高频），在Ham术语中，UHF 也称作 70 厘米（波长），VHF 也称作 2 米（波长），具体的频率与波长在以后章节中介绍。本地通联的距离可以达到 50英里（约 80 公里），如果在本地架设一台中继器，距离还可以更远。 2.远程通联 使用短波电台，与世界各地的Ham通联。在中国，“短波”通常泛指 HF（高频）， 也就是 10 米至 100 米的波长范围，具体的频率与波长在以后章节中介绍。与我们远程通联的Ham，可能在本国（例如新疆），可能在邻国（例如日本），可能在地球的另一面（例如智利），也可能在地图上查找不到的某个岛屿上（例如瑙鲁），因此远程通联比本地通联更有乐趣，更有挑战性。远程通联的数量与难度，是衡量Ham专业水平高低的主要依据，也是Ham申请各种竞赛奖状的主要依据。 3.数字通联 将电台与计算机连接起来，通过专门的软件，在Ham之间进行信息交换。数字通联既利用传统的无线电技术，又利用当代的计算机技术，极大丰富了业余无线电的内涵。例如，以前Ham通联，只能听到对方的声音，看不到对方的影象，而现在利用慢扫描电视，可以传输低分辨率图象，增加了通联的乐趣。在中国，最常见的数字通联方式有三种，即 RTTY（无线电传）、SSTV（慢扫描电视）和 Packet（数据包），均需要专门软件的支持，不过这些软件都是免费的。 4.网上通联 将业余无线电技术、计算机技术、网络技术三者结合起来，实现基于互联网的远程通联。许多国家的Ham都设计出自己的网上通联系统，但由于资金等原因，并没有实际应用。在西方，最著名的网上通联系统是 IRLP（互联网-电台连接方案），通过这个系统，南半球澳大利亚的Ham可以使用普通的手持电台，轻松地与北半球加拿大的Ham通联。在中国，最常用的网上通联系统是 eQSO（在线通联），但通联双方必须使用计算机和一个相同的软件，因此它更像是一个网上聊天室。 5.外空通联 与宇宙空间站上的宇航员通联，或者以卫星为中继器，进行国际、洲际的远程通联。在美国、俄国的宇宙空间站上，安装了业余无线电设备，有些宇航员本身就是有电台执照的Ham，他们会在工作闲暇时间，与地球上的Ham通联。另外，卫星可以看作是安装在外层空间的中继器，一个地点的Ham可以将无线电信号传送给卫星，由卫星转发给另外一个地点的Ham。 新手考证介绍和题库 操作证书与无线电执照的关系，就像是驾照与机动车行驶证的关系。操作证书是能力资质的认可，无线电执照是设备使用的许可，两者缺一不可。要想成为HAM，第一步便是获得A类操作证（最低级别的证书）。 首先要知道，操作证书由CRAC（Chinese Radio Amateurs Club）组织考核、颁发。 可以通过访问其官方网站获得考试的相关信息。（http://www.crac.org.cn/Home/Index）网页下方可以找到如图所示的几个入口，点击考试信息，并选择考生入口即可进入报名系统的登录页面,这里要注意的是有些地方无线电协会并不是通过此网站报名的,比如福州地区的报名是通过发送电子邮件的方式。 手机上也有相应的APP，可以进行报考、模拟考试、查询成绩、获取电子操作证等的一站式服务。首先在手机的应用商店中搜索“智谱”，下载安装后注册或登录已有的账号（上面网页注册的账号与APP通用）。 考试内容为单项选择题。A类只需要回答30道题，答对25道通过考试，考试时间40分钟，15分钟后可以交卷，时间非常充裕。 如何备考？首先考试是有题库的，把A类题库总共不到400道题背下来就没有问题。但是想轻松些准备，可以考虑买一本书《业余无线电通信》最新的第六版，相比前一版多了有关SDR收发信机的内容。里面不仅有很多HAM基础知识，也有考试提纲。 在此推荐一个微信小程序: HAM模拟考试待考试通过后,相关部门会通知你领取或邮寄给你无线电操作证,《操作证书》当地无线电管理部门颁发，并会给你指配呼号然后就可以买一台带有核准证的手台或车台到各地方无线电委员会申请验机以获得电台执照.设备到设台地所在的市、州无线电管理机构经过技术检验后，核发办理相应类别的《中华人民共和国无线电台执照》 A类《证书业余无线电台操作证书》是初级操作证书，业余无线电台可以在30-3000MHZ范围内的各业余业务和卫星业余业务频段内发射，最大发射功率不大于25W A类业余无线电台操作证书考试题库 B类《业余无线电台操作证书》，业余无线电台可以在各业余业务和卫星业余业务频段内发射工作，30MHZ以下频段最大发射功率不大于100W，30MHZ以上频段最大发射频段不大于25W。 B类业余无线电台操作证书考试题库 C类《业余无线电台操作证书》是最高级别的操作证书，业余无线电台可以在各业余业务和卫星业余业务频段内发射工作，30MHZ以下频段最大发射功率不大于1000W，30MHz以上频段最大发射功率不大于25W 呼号 呼号相当于你在无线电通信世界的ID，由前缀、国内业余分区和后缀组成： 前缀由1~2个英文字母或英文与数字字母的组合。例如BA表示“中国一级用户台”，BY表示“中国集体台”，BT表示“中国临时台” 分区为1个数字，分布如下：1表示北京，2表示东北三省，3表示天津、河北、内蒙古和山西；4表示上海、山东、江苏；5表示浙江、江西、福建；6表示安徽、河南、湖北；7表示湖南、广东、广西、海南；8表示四川、重庆、贵州、云南；9表示陕西、甘肃、宁夏、青海；0表示新疆、西藏 后缀为1~3个字母，用于表示电台序号（管理编号） 信号报告 无线电通信非常关键的一个环节就是信号好不好，在记录及报告信号情况时，约定了信号报告（即RST）的3个关键因素： 信号可辨度：从弱到强分别用1~5表示；1—信号不可辨；2—不容易辨别，偶有个别字可辨；3—能分辨，但困难 ；4—能辨别，没什么困难；5—非常清晰 信号强度：从弱到强分别用1~9表示 音调：从弱到强分别用1~9表示，仅在电报和电传中用 例如，在通信中经常听到信号为“59”，表示信号清晰且特别强。 业余频段 业务无线电频段主要有：VHF（144146MHZ）和UHF（430440）MHZ，前者为专用，后者可能被临时占用。购买无线电设备时最好同时支持上述两个频段。 QSL卡片 即业余无线电通信爱好者之间通信联络的报告凭证，用于记录联系时间、对方呼号、信号报告等，一般制作成纸质卡片，可将该卡片快递给对方，这些报告是本行业内大赛、竞赛的重要证据。比如某大赛要求提供100个通信报告，你需要提交100个这样的卡片。 世界协调时UTC 为便于不同国家人们对时间的统一理解和记录，国际电信联盟制定了UTC全球统一时间机制，简单来讲，中国地区的UTC时间=北京时间-8小时，例如北京时间14点，等于UTC时间6点。 慢扫描电视 SSTV 慢扫描电视（Slow-scan television）是业余无线电爱好者的一种主要图片传输方法，慢扫描电视通过无线电传输和接收单色或彩色静态图片。 慢扫描电视的一个术语名称是窄带电视。广播电视需要6MHz的带宽，因为帧速为25到30fps。慢扫描电视的带宽只有3kHz，因此慢扫描电视是一种慢得多的静态图像传输方法，通常每帧需要持续8秒或若干分钟。 业余无线电操作员通常在短波（或高频）、甚高频、超高频波段使用慢扫描电视。 SSTV（慢扫描电视（Slow-scan television））是业余无线电爱好者的一种主要图片传输方法，慢扫描电视通过无线电传输和接收单色或彩色静态图片。 这两个软件在火腿ham族（无线电爱好者）里面用的人比较多，不过对于非无线电爱好者来说也挺好用。 APP名称：SSTV Encoder 作者：Olga Miller（Ahmet Inan的妻子） 版本：2.5（更新日期：2020年6月30日）（目前最新版本） 简介 这个应用程序通过播放音频发送图像（图像→音频）（SSTV编码器）。 APP名称：Robot36 作者：Ahmet Inan（Olga Miller的丈夫） 版本：1.44（更新日期：2019年12月31日）（目前最新版本） 简介 这个应用程序通过收听音频接收图像（音频→图像）（SSTV图像","date":"2023-03-13","objectID":"/2023/radio/:0:1","tags":["radio"],"title":"业余无线电爱好者入门知识","uri":"/2023/radio/"}]